# Base image for ARM64
FROM arm64v8/centos:7

# Configure repositories and GPG keys
RUN rm -rf /etc/yum.repos.d/* && \
    echo -e "[base]\n\
name=CentOS-7 - Base\n\
baseurl=https://vault.centos.org/altarch/7/os/aarch64/\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://vault.centos.org/altarch/7/os/aarch64/RPM-GPG-KEY-CentOS-7\n\n\
[updates]\n\
name=CentOS-7 - Updates\n\
baseurl=https://vault.centos.org/altarch/7/updates/aarch64/\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://vault.centos.org/altarch/7/os/aarch64/RPM-GPG-KEY-CentOS-7\n\n\
[extras]\n\
name=CentOS-7 - Extras\n\
baseurl=https://vault.centos.org/altarch/7/extras/aarch64/\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://vault.centos.org/altarch/7/os/aarch64/RPM-GPG-KEY-CentOS-7\n" > /etc/yum.repos.d/CentOS-Vault.repo && \
    yum clean all && \
    yum makecache fast

# Install system tools, compilers, and development libraries
RUN yum --nogpgcheck groupinstall -y "Development Tools" && \
    yum --nogpgcheck install -y wget gcc gcc-c++ glibc-static libstdc++-static zlib-devel bzip2 bzip2-devel \
        xz-devel libffi-devel ncurses-devel sqlite sqlite-devel openssl openssl-devel tk-devel gdbm-devel \
        libuuid-devel libtirpc-devel readline-devel uuid-devel pkg-config tar && \
    yum clean all

# Install libvirt-devel separately with better error handling
RUN yum --nogpgcheck install -y libvirt-devel || \
    (echo "First attempt failed, trying with disabled GPG checks for all repos" && \
     sed -i 's/gpgcheck=1/gpgcheck=0/g' /etc/yum.repos.d/CentOS-Vault.repo && \
     yum install -y libvirt-devel) && \
    yum clean all

# Build OpenSSL from source
RUN curl -LO https://www.openssl.org/source/openssl-1.1.1u.tar.gz && \
    tar -xzf openssl-1.1.1u.tar.gz && \
    cd openssl-1.1.1u && \
    ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl && \
    make -j$(nproc) && \
    make install && \
    cd .. && rm -rf openssl-1.1.1u openssl-1.1.1u.tar.gz && \
    echo "/usr/local/openssl/lib" > /etc/ld.so.conf.d/openssl.conf && ldconfig

# Build Python from source
RUN curl -O https://www.python.org/ftp/python/3.10.12/Python-3.10.12.tgz && \
    tar -xzf Python-3.10.12.tgz && \
    cd Python-3.10.12 && \
    ./configure --enable-optimizations \
                --enable-shared \
                --with-ssl-default-suites=openssl \
                --with-openssl=/usr/local/openssl \
                LDFLAGS="-L/usr/local/openssl/lib -L/usr/lib64 -Wl,-rpath,/usr/local/openssl/lib" \
                CPPFLAGS="-I/usr/local/openssl/include -I/usr/include" \
                LIBS="-lpthread -ldl" && \
    make clean && \
    LD_LIBRARY_PATH=/usr/local/openssl/lib make -j$(nproc) && \
    make altinstall && \
    ln -s /usr/local/bin/python3.10 /usr/bin/python3 && \
    ln -s /usr/local/bin/pip3.10 /usr/bin/pip3 && \
    cd .. && rm -rf Python-3.10.12 Python-3.10.12.tgz && \
    echo "/usr/local/lib" > /etc/ld.so.conf.d/python3.conf && ldconfig

# Add Python shared library path
ENV LD_LIBRARY_PATH="/usr/local/lib:/usr/local/openssl/lib:$LD_LIBRARY_PATH"
ENV TARGET_ARCH="arm64"

RUN ln -s /usr/bin/gcc /usr/bin/aarch64-linux-gnu-gcc && \
    ln -s /usr/bin/g++ /usr/bin/aarch64-linux-gnu-g++

# Verify Python installation and SSL
RUN python3 -c "import ssl; print(ssl.OPENSSL_VERSION)"

# Set working directory
WORKDIR /workspace

# Default command
CMD ["bash"]
